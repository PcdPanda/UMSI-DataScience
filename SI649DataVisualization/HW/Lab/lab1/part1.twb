<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='movies.csv (movies_independent_part_1)' inline='true' name='federated.1mevltv0j2m8z40znwh2k0iw1usl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='movies_independent_part_1' name='excel-direct.1ub8ssp0fuhzg912o888n0jd2909'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PANDA/Study/UMSI/SI649/01 - Intro/lab/movies_independent_part_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ub8ssp0fuhzg912o888n0jd2909' name='movies.csv' table='[movies#csv$]' type='table'>
          <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='integer' name='US Gross' ordinal='1' />
            <column datatype='integer' name='Worldwide Gross' ordinal='2' />
            <column datatype='integer' name='US DVD Sales' ordinal='3' />
            <column datatype='integer' name='Production Budget' ordinal='4' />
            <column datatype='string' name='Release Date' ordinal='5' />
            <column datatype='string' name='MPAA Rating' ordinal='6' />
            <column datatype='integer' name='Running Time (min)' ordinal='7' />
            <column datatype='string' name='Distributor' ordinal='8' />
            <column datatype='string' name='Source' ordinal='9' />
            <column datatype='string' name='Major Genre' ordinal='10' />
            <column datatype='string' name='Creative Type' ordinal='11' />
            <column datatype='string' name='Director' ordinal='12' />
            <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
            <column datatype='real' name='IMDB Rating' ordinal='14' />
            <column datatype='integer' name='IMDB Votes' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ub8ssp0fuhzg912o888n0jd2909' name='movies.csv' table='[movies#csv$]' type='table'>
          <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='integer' name='US Gross' ordinal='1' />
            <column datatype='integer' name='Worldwide Gross' ordinal='2' />
            <column datatype='integer' name='US DVD Sales' ordinal='3' />
            <column datatype='integer' name='Production Budget' ordinal='4' />
            <column datatype='string' name='Release Date' ordinal='5' />
            <column datatype='string' name='MPAA Rating' ordinal='6' />
            <column datatype='integer' name='Running Time (min)' ordinal='7' />
            <column datatype='string' name='Distributor' ordinal='8' />
            <column datatype='string' name='Source' ordinal='9' />
            <column datatype='string' name='Major Genre' ordinal='10' />
            <column datatype='string' name='Creative Type' ordinal='11' />
            <column datatype='string' name='Director' ordinal='12' />
            <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
            <column datatype='real' name='IMDB Rating' ordinal='14' />
            <column datatype='integer' name='IMDB Votes' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US Gross</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Worldwide Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Worldwide Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Worldwide Gross</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US DVD Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US DVD Sales]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US DVD Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Production Budget]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Production Budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Release Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Release Date]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Release Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPAA Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MPAA Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>MPAA Rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Running Time (min)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Running Time (min)]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Running Time (min)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distributor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Distributor]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Distributor</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major Genre</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Major Genre]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Major Genre</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Creative Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Creative Type]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Creative Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Director]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Director</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rotten Tomatoes Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rotten Tomatoes Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Rotten Tomatoes Rating</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IMDB Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Rating</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMDB Votes]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Votes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <approx-count>2952</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P3202:no:A1:P3202:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='movies.csv' datatype='table' name='[__tableau_internal_object_id__].[movies.csv_A81CC387C016469E804ABF4190329C2C]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='50000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;中国&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='movies.csv' id='movies.csv_A81CC387C016469E804ABF4190329C2C'>
            <properties context=''>
              <relation connection='excel-direct.1ub8ssp0fuhzg912o888n0jd2909' name='movies.csv' table='[movies#csv$]' type='table'>
                <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
                  <column datatype='string' name='Title' ordinal='0' />
                  <column datatype='integer' name='US Gross' ordinal='1' />
                  <column datatype='integer' name='Worldwide Gross' ordinal='2' />
                  <column datatype='integer' name='US DVD Sales' ordinal='3' />
                  <column datatype='integer' name='Production Budget' ordinal='4' />
                  <column datatype='string' name='Release Date' ordinal='5' />
                  <column datatype='string' name='MPAA Rating' ordinal='6' />
                  <column datatype='integer' name='Running Time (min)' ordinal='7' />
                  <column datatype='string' name='Distributor' ordinal='8' />
                  <column datatype='string' name='Source' ordinal='9' />
                  <column datatype='string' name='Major Genre' ordinal='10' />
                  <column datatype='string' name='Creative Type' ordinal='11' />
                  <column datatype='string' name='Director' ordinal='12' />
                  <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
                  <column datatype='real' name='IMDB Rating' ordinal='14' />
                  <column datatype='integer' name='IMDB Votes' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='movies.csv (movies_independent_part_1) (2)' inline='true' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='movies_independent_part_1' name='excel-direct.1piu4ja0seak0m10vxhnv0kybz72'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/PANDA/Study/UMSI/SI649/01 - Intro/lab/movies_independent_part_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1piu4ja0seak0m10vxhnv0kybz72' name='movies.csv' table='[movies#csv$]' type='table'>
          <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='integer' name='US Gross' ordinal='1' />
            <column datatype='integer' name='Worldwide Gross' ordinal='2' />
            <column datatype='integer' name='US DVD Sales' ordinal='3' />
            <column datatype='integer' name='Production Budget' ordinal='4' />
            <column datatype='string' name='Release Date' ordinal='5' />
            <column datatype='string' name='MPAA Rating' ordinal='6' />
            <column datatype='integer' name='Running Time (min)' ordinal='7' />
            <column datatype='string' name='Distributor' ordinal='8' />
            <column datatype='string' name='Source' ordinal='9' />
            <column datatype='string' name='Major Genre' ordinal='10' />
            <column datatype='string' name='Creative Type' ordinal='11' />
            <column datatype='string' name='Director' ordinal='12' />
            <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
            <column datatype='real' name='IMDB Rating' ordinal='14' />
            <column datatype='integer' name='IMDB Votes' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1piu4ja0seak0m10vxhnv0kybz72' name='movies.csv' table='[movies#csv$]' type='table'>
          <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='integer' name='US Gross' ordinal='1' />
            <column datatype='integer' name='Worldwide Gross' ordinal='2' />
            <column datatype='integer' name='US DVD Sales' ordinal='3' />
            <column datatype='integer' name='Production Budget' ordinal='4' />
            <column datatype='string' name='Release Date' ordinal='5' />
            <column datatype='string' name='MPAA Rating' ordinal='6' />
            <column datatype='integer' name='Running Time (min)' ordinal='7' />
            <column datatype='string' name='Distributor' ordinal='8' />
            <column datatype='string' name='Source' ordinal='9' />
            <column datatype='string' name='Major Genre' ordinal='10' />
            <column datatype='string' name='Creative Type' ordinal='11' />
            <column datatype='string' name='Director' ordinal='12' />
            <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
            <column datatype='real' name='IMDB Rating' ordinal='14' />
            <column datatype='integer' name='IMDB Votes' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <approx-count>2952</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P3202:no:A1:P3202:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US Gross</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Worldwide Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Worldwide Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Worldwide Gross</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US DVD Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US DVD Sales]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US DVD Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Production Budget]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Production Budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Release Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Release Date]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Release Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPAA Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MPAA Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>MPAA Rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Running Time (min)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Running Time (min)]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Running Time (min)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distributor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Distributor]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Distributor</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major Genre</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Major Genre]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Major Genre</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Creative Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Creative Type]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Creative Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Director]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Director</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LZH_RCN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rotten Tomatoes Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rotten Tomatoes Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Rotten Tomatoes Rating</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IMDB Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Rating</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMDB Votes]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Votes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[movies.csv_D8052112F87542C1BFEFE7D7B7199645]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
      </column>
      <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Revenue (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Calculation_1287185081423011840]' peg='0' size='6.09581e+07' />
      </column>
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='movies.csv' datatype='table' name='[__tableau_internal_object_id__].[movies.csv_D8052112F87542C1BFEFE7D7B7199645]' role='measure' type='quantitative' />
      <column datatype='string' name='[title keyword]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Title]' new-bin='true'>
          <bin default-name='false' value='&quot;dragon&quot;'>
            <value>&quot;Crouching Tiger, Hidden Dragon&quot;</value>
            <value>&quot;Dragonfly&quot;</value>
            <value>&quot;Dragonheart&quot;</value>
            <value>&quot;Dragonslayer&quot;</value>
            <value>&quot;Dungeons &amp; Dragons 2: The Elemental Might&quot;</value>
            <value>&quot;Dungeons and Dragons&quot;</value>
            <value>&quot;George and the Dragon&quot;</value>
            <value>&quot;How to Train Your Dragon&quot;</value>
            <value>&quot;Kiss of the Dragon&quot;</value>
            <value>&quot;Pete&apos;s Dragon&quot;</value>
            <value>&quot;Red Dragon&quot;</value>
            <value>&quot;The Mummy: Tomb of the Dragon Emperor&quot;</value>
            <value>&quot;Three Kingdoms: Resurrection of the Dragon&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;star&quot;'>
            <value>&quot;Bright Star&quot;</value>
            <value>&quot;Dickie Roberts: Former Child Star&quot;</value>
            <value>&quot;Lone Star&quot;</value>
            <value>&quot;Rock Star&quot;</value>
            <value>&quot;Star Trek&quot;</value>
            <value>&quot;Star Trek II: The Wrath of Khan&quot;</value>
            <value>&quot;Star Trek III: The Search for Spock&quot;</value>
            <value>&quot;Star Trek IV: The Voyage Home&quot;</value>
            <value>&quot;Star Trek V: The Final Frontier&quot;</value>
            <value>&quot;Star Trek VI: The Undiscovered Country&quot;</value>
            <value>&quot;Star Trek: First Contact&quot;</value>
            <value>&quot;Star Trek: Generations&quot;</value>
            <value>&quot;Star Trek: Insurrection&quot;</value>
            <value>&quot;Star Trek: Nemesis&quot;</value>
            <value>&quot;Star Trek: The Motion Picture&quot;</value>
            <value>&quot;Star Wars Ep. I: The Phantom Menace&quot;</value>
            <value>&quot;Star Wars Ep. II: Attack of the Clones&quot;</value>
            <value>&quot;Star Wars Ep. III: Revenge of the Sith&quot;</value>
            <value>&quot;Star Wars Ep. IV: A New Hope&quot;</value>
            <value>&quot;Star Wars Ep. V: The Empire Strikes Back&quot;</value>
            <value>&quot;Star Wars Ep. VI: Return of the Jedi&quot;</value>
            <value>&quot;Star Wars: The Clone Wars&quot;</value>
            <value>&quot;Stardust&quot;</value>
            <value>&quot;Stargate&quot;</value>
            <value>&quot;Stargate - The Ark of Truth&quot;</value>
            <value>&quot;Starship Troopers&quot;</value>
            <value>&quot;Starsky &amp; Hutch&quot;</value>
            <value>&quot;Superstar&quot;</value>
            <value>&quot;The Men Who Stare at Goats&quot;</value>
          </bin>
        </calculation>
      </column>
      <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Major Genre:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Musical&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Concert/Performance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romantic Comedy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thriller/Suspense&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black Comedy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1941&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Austin Powers in Goldmember&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Big&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casino Royale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daddy Day Care&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Scissorhands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Four Christmases&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Head of State&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Dirt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Looney Tunes: Back in Action&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monsoon Wedding&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patch Adams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raising Helen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serial Mom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stripes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Curse of the Jade Scorpion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Ladykillers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Shaggy Dog&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Welcome to Mooseport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American Pie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Armageddon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beauty Shop&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Breakfast of Champions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bruce Almighty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clueless&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dogma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fear and Loathing in Las Vegas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Good Morning Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Imagine That&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Legally Blonde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meet Dave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;My Stepmother Is an Alien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Police Academy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scary Movie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Park: Bigger, Longer &amp; Uncut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;The 40 Year-old Virgin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;The Grand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;The Pineapple Express&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Undercover Brother&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zack and Miri Make a Porno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Analyze This&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bee Movie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buffalo &apos;66&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cop Out&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dumb &amp; Dumber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flirting with Disaster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Groundhog Day&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;I am Legend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jane Austen&apos;s Mafia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Like Mike&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meet the Spartans&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mrs. Doubtfire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naked Gun 33 1/3: The Final Insult&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pushing Tin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;School for Scoundrels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spanglish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Benchwarmers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Hudsucker Proxy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;The Rocker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WALL-E&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Meet the Fockers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Serious Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adaptation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baby&apos;s Day Out&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Big Trouble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlie and the Chocolate Factory&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Death at a Funeral&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eternal Sunshine of the Spotless Mind&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Full Frontal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;History of the World: Part I&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madea Goes To Jail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monsters, Inc.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mrs. Henderson Presents&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ocean&apos;s Eleven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rebound&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Showtime&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stuck On You&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The First Wives Club&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The Man Who Knew Too Little&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The Waterboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;What Planet Are You From?&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A League of Their Own&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austin Powers: International Man of Mystery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Big Daddy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dance Flick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elf&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Four Rooms&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Herbie: Fully Loaded&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joe Somebody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Love and Death&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monster-in-Law&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Night at the Museum: Battle of the Smithsonian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rat Race&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shaolin Soccer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Striptease&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Devil Wears Prada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Life Aquatic with Steve Zissou&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The Sidewalks of New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;The War of the Worlds&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Welcome to the Dollhouse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 7: Twenty Four Seven&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anchorman: The Legend of Ron Burgundy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beetle Juice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulworth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Couples Retreat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duplex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flubber&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamlet 2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indiana Jones and the Last Crusade&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jay and Silent Bob Strike Back&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa Picard is Famous&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Memoirs of an Invisible Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Napoleon Dynamite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R.V.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scooby-Doo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Splash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Big Lebowski&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Invention of Lying&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Santa Clause&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wayne&apos;s World&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;The Simpsons Movie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alvin and the Chipmunks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Be Cool&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Borat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Click&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Doctor Dolittle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fat Albert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghostbusters&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;I Love You, Beth Cooper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Le Fabuleux destin d&apos;AmÈlie Poulain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Max Keeble&apos;s Big Move&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;My Favorite Martian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peggy Sue Got Married&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romance and Cigarettes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sherlock Holmes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smokin&apos; Aces&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Talladega Nights: The Ballad of Ricky Bobby&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Game Plan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tropic Thunder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yes Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Men and a Baby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;An Alan Smithee Film: Burn Hollywood Burn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beavis and Butt-head Do America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bring it On&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Code Name: The Cleaner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Down to Earth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Festen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gosford Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;In &amp; Out&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lemony Snicket&apos;s A Series of Unfortunate Events&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meet the Browns&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mystery, Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Practical Magic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scary Movie 2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Space Jam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Terminator 2: Judgment Day&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Addams Family&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Pacifier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Pink Panther&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vicky Cristina Barcelona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zombieland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;All About the Benjamins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbershop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blazing Saddles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clerks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Disaster Movie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Extract&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Get Shorty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hot Fuzz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Land of the Lost&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marci X&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;My Best Friend&apos;s Girl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ratatouille&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Road Trip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Small Soldiers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swingers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;The Front Page&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;The Naked Gun 2Ω: The Smell of Fear&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tootsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wonder Boys&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28 Days&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anger Management&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Best in Show&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caddyshack&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Wood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushed Away&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Happiness&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iron Man 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey Girl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Little Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Miss Congeniality&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New York Minute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Radio Days&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scooby-Doo 2: Monsters Unleashed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Starsky &amp; Hutch&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Borrowers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Kentucky Fried Movie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;The Santa Clause 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;We&apos;re No Angels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Simple Wish&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Air Bud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bad Santa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bill &amp; Ted&apos;s Bogus Journey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheaper by the Dozen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Death Becomes Her&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evan Almighty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Funny People&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holy Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;King&apos;s Ransom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Multiplicity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old School&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Remember Me, My Love&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silent Movie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Super Troopers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Flintstones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Mask&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The Wedding Crashers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whip It&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ace Ventura: Pet Detective&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Airplane!&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bananas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bill &amp; Ted&apos;s Excellent Adventure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cheaper by the Dozen 2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Everything You Always Wanted to Know&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furry Vengeance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kindergarten Cop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingpin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mallrats&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Orgazmo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Renaissance Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sleeper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Superbad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Flintstones in Viva Rock Vegas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Mighty Ducks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Wendell Baker Story&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Chicks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Almost Famous&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barnyard: The Original Party Animals&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clerks II&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Do the Right Thing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fast Times at Ridgemont High&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghost World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;How the Grinch Stole Christmas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Last Holiday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mars Attacks!&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;My Best Friend&apos;s Wedding&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Blart: Mall Cop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saving Private Ryan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Small Time Crooks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tadpole&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;The Full Monty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;The Nutty Professor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tristram Shandy: A Cock and Bull Story&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Year One&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American Graffiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Be Kind Rewind&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bowfinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cloudy with a Chance of Meatballs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doctor Dolittle 2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Father&apos;s Day&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Girl 6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;I Now Pronounce You Chuck and Larry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Legal Eagles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mean Girls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;My Fellow Americans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Play it to the Bone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saving Silverman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shrek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Snow Dogs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Team America: World Police&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Goods: Live Hard, Sell Hard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Perez Family&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yours, Mine and Ours&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austin Powers: The Spy Who Shagged Me&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Big Fat Liar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Catch-22&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Date Movie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Envy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Freaky Friday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hero&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Julie &amp; Julia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lucky Numbers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar: Escape 2 Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mouse Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nutty Professor II: The Klumps&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roll Bounce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shaun of the Dead&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart Little&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Dukes of Hazzard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Longest Yard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Twins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Twister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;What a Girl Wants&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Night at the Museum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;102 Dalmatians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Annie Hall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bewitched&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyrus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EDtv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;For Your Consideration&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Happy Gilmore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jaws&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jingle All the Way&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lonesome Jim&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miss Congeniality 2: Armed and Fabulous&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Next Friday&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rain Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scott Pilgrim vs. The World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stranger Than Fiction&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Cable Guy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Kid&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The School of Rock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Welcome Home Roscoe Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;An American Carol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Because of Winn-Dixie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bringing Down the House&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Connie &amp; Carla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dances with Wolves&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Drive Me Crazy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fever Pitch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gremlins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Home Alone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;In Good Company&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liar Liar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mystic Pizza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Primary Colors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scary Movie 3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spaceballs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;The Animal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;The Honeymooners&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;The Princess Diaries&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zoolander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alfie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bandits&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blast from the Past&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CJ7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Evolution&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Home Alone 2: Lost in New York&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kung Pow: Enter the Fist&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Man of the House&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osmosis Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pretty Woman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ri¢hie Ri¢h&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slums of Beverly Hills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweet Home Alabama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Four Seasons&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Muse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Whole Ten Yards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Who Framed Roger Rabbit?&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Mighty Wind&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ace Ventura: When Nature Calls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Away We Go&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Big Momma&apos;s House&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Date Night&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Epic Movie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High Fidelity&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madea&apos;s Family Reunion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mission: Impossible 2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muppets From Space&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;O Brother, Where Art Thou&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ready to Rumble&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;She&apos;s Gotta Have It&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stuart Little 2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Family Man&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Man&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Stepford Wives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;What Just Happened&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;The Hangover&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;13 Going On 30&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Analyze That&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedazzled&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Celebrity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cool Runnings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dudley Do-Right&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finishing the Game&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gremlins 2: The New Batch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isn&apos;t She Great&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Life&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meet the Parents&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nacho Libre&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Punch-Drunk Love&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scary Movie 4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spaced Invaders&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Bad News Bears&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Day After Tomorrow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The House Bunny&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;The Replacements&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waiting for Guffman&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Title' />
        <field-sort-custom-order field='US Gross' />
        <field-sort-custom-order field='Worldwide Gross' />
        <field-sort-custom-order field='Calculation_1287185081423011840' />
        <field-sort-custom-order field='US DVD Sales' />
        <field-sort-custom-order field='Production Budget' />
        <field-sort-custom-order field='Release Date' />
        <field-sort-custom-order field='MPAA Rating' />
        <field-sort-custom-order field='Running Time (min)' />
        <field-sort-custom-order field='Distributor' />
        <field-sort-custom-order field='Source' />
        <field-sort-custom-order field='Major Genre' />
        <field-sort-custom-order field='Creative Type' />
        <field-sort-custom-order field='Director' />
        <field-sort-custom-order field='Rotten Tomatoes Rating' />
        <field-sort-custom-order field='IMDB Rating' />
        <field-sort-custom-order field='IMDB Votes' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='movies.csv' id='movies.csv_D8052112F87542C1BFEFE7D7B7199645'>
            <properties context=''>
              <relation connection='excel-direct.1piu4ja0seak0m10vxhnv0kybz72' name='movies.csv' table='[movies#csv$]' type='table'>
                <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
                  <column datatype='string' name='Title' ordinal='0' />
                  <column datatype='integer' name='US Gross' ordinal='1' />
                  <column datatype='integer' name='Worldwide Gross' ordinal='2' />
                  <column datatype='integer' name='US DVD Sales' ordinal='3' />
                  <column datatype='integer' name='Production Budget' ordinal='4' />
                  <column datatype='string' name='Release Date' ordinal='5' />
                  <column datatype='string' name='MPAA Rating' ordinal='6' />
                  <column datatype='integer' name='Running Time (min)' ordinal='7' />
                  <column datatype='string' name='Distributor' ordinal='8' />
                  <column datatype='string' name='Source' ordinal='9' />
                  <column datatype='string' name='Major Genre' ordinal='10' />
                  <column datatype='string' name='Creative Type' ordinal='11' />
                  <column datatype='string' name='Director' ordinal='12' />
                  <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
                  <column datatype='real' name='IMDB Rating' ordinal='14' />
                  <column datatype='integer' name='IMDB Votes' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Q11 Director with most profitable comedy'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Max' name='[max:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]' included-values='in-range'>
            <min>400000000</min>
            <max>470495432</max>
          </filter>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Director:nk]' />
              <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]'>
            <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</column>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</column>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]</rows>
        <cols>([federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk] / [federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk])</cols>
      </table>
      <simple-id uuid='{A9C0AB74-33D5-4907-B35A-1864697BB777}' />
    </worksheet>
    <worksheet name='Q12 Dragon vs Star'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Avg' name='[avg:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title keyword]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Title]' new-bin='true'>
                <bin default-name='false' value='&quot;dragon&quot;'>
                  <value>&quot;Crouching Tiger, Hidden Dragon&quot;</value>
                  <value>&quot;Dragonfly&quot;</value>
                  <value>&quot;Dragonheart&quot;</value>
                  <value>&quot;Dragonslayer&quot;</value>
                  <value>&quot;Dungeons &amp; Dragons 2: The Elemental Might&quot;</value>
                  <value>&quot;Dungeons and Dragons&quot;</value>
                  <value>&quot;George and the Dragon&quot;</value>
                  <value>&quot;How to Train Your Dragon&quot;</value>
                  <value>&quot;Kiss of the Dragon&quot;</value>
                  <value>&quot;Pete&apos;s Dragon&quot;</value>
                  <value>&quot;Red Dragon&quot;</value>
                  <value>&quot;The Mummy: Tomb of the Dragon Emperor&quot;</value>
                  <value>&quot;Three Kingdoms: Resurrection of the Dragon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;star&quot;'>
                  <value>&quot;Bright Star&quot;</value>
                  <value>&quot;Dickie Roberts: Former Child Star&quot;</value>
                  <value>&quot;Lone Star&quot;</value>
                  <value>&quot;Rock Star&quot;</value>
                  <value>&quot;Star Trek&quot;</value>
                  <value>&quot;Star Trek II: The Wrath of Khan&quot;</value>
                  <value>&quot;Star Trek III: The Search for Spock&quot;</value>
                  <value>&quot;Star Trek IV: The Voyage Home&quot;</value>
                  <value>&quot;Star Trek V: The Final Frontier&quot;</value>
                  <value>&quot;Star Trek VI: The Undiscovered Country&quot;</value>
                  <value>&quot;Star Trek: First Contact&quot;</value>
                  <value>&quot;Star Trek: Generations&quot;</value>
                  <value>&quot;Star Trek: Insurrection&quot;</value>
                  <value>&quot;Star Trek: Nemesis&quot;</value>
                  <value>&quot;Star Trek: The Motion Picture&quot;</value>
                  <value>&quot;Star Wars Ep. I: The Phantom Menace&quot;</value>
                  <value>&quot;Star Wars Ep. II: Attack of the Clones&quot;</value>
                  <value>&quot;Star Wars Ep. III: Revenge of the Sith&quot;</value>
                  <value>&quot;Star Wars Ep. IV: A New Hope&quot;</value>
                  <value>&quot;Star Wars Ep. V: The Empire Strikes Back&quot;</value>
                  <value>&quot;Star Wars Ep. VI: Return of the Jedi&quot;</value>
                  <value>&quot;Star Wars: The Clone Wars&quot;</value>
                  <value>&quot;Stardust&quot;</value>
                  <value>&quot;Stargate&quot;</value>
                  <value>&quot;Stargate - The Ark of Truth&quot;</value>
                  <value>&quot;Starship Troopers&quot;</value>
                  <value>&quot;Starsky &amp; Hutch&quot;</value>
                  <value>&quot;Superstar&quot;</value>
                  <value>&quot;The Men Who Stare at Goats&quot;</value>
                </bin>
              </calculation>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[title keyword]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[title keyword]' member='&quot;dragon&quot;' />
              <groupfilter function='member' level='[title keyword]' member='&quot;star&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[title keyword]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[title keyword]</cols>
      </table>
      <simple-id uuid='{378F6A01-9A34-48FC-AE87-F3F4576A0097}' />
    </worksheet>
    <worksheet name='Q15 Comedy vs Movies'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Sum' name='[sum:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Action&quot;' />
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</cols>
      </table>
      <simple-id uuid='{D4DBB3EF-DDB6-4FBE-9B1E-1ED045E53B32}' />
    </worksheet>
    <worksheet name='Q15-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Avg' name='[avg:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Adam McKay&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Adam Shankman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Akira Kurosawa&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Alan Alda&quot;' />
              <groupfilter from='&quot;Alan Rudolph&quot;' function='range' level='[none:Director:nk]' to='&quot;Albert Hughes&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Alex Proyas&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Amy Heckerling&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Andrei Konchalovsky&quot;' />
              <groupfilter from='&quot;Andrew Bergman&quot;' function='range' level='[none:Director:nk]' to='&quot;Andy Fickman&quot;' />
              <groupfilter from='&quot;Andy Tennant&quot;' function='range' level='[none:Director:nk]' to='&quot;Angela Robinson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Antoine Fuqua&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Arthur Hiller&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Barry Levinson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Barry Sonnenfeld&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ben Stiller&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Betty Thomas&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Bille Woodruff&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Billy Wilder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Bobby Farrelly&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Brad Bird&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Brad Silberling&quot;' />
              <groupfilter from='&quot;Brett Ratner&quot;' function='range' level='[none:Director:nk]' to='&quot;Cameron Crowe&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Catherine Hardwicke&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Charles Martin Smith&quot;' />
              <groupfilter from='&quot;Charles Shyer&quot;' function='range' level='[none:Director:nk]' to='&quot;Chris Nahon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Chris Rock&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Christian Duguay&quot;' />
              <groupfilter from='&quot;Christopher Guest&quot;' function='range' level='[none:Director:nk]' to='&quot;Corey Yuen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Curtis Hanson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Damien Wayans&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Danny De Vito&quot;' />
              <groupfilter from='&quot;David Dobkin&quot;' function='range' level='[none:Director:nk]' to='&quot;David Goyer&quot;' />
              <groupfilter from='&quot;David Lynch&quot;' function='range' level='[none:Director:nk]' to='&quot;David O. Russell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;David Silverman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;David Zucker&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dennie Gordon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dennis Dugan&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dominic Sena&quot;' />
              <groupfilter from='&quot;Donald Petrie&quot;' function='range' level='[none:Director:nk]' to='&quot;Drew Barrymore&quot;' />
              <groupfilter from='&quot;Edgar Wright&quot;' function='range' level='[none:Director:nk]' to='&quot;Edward Zwick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Eric Darnell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;F. Gary Gray&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Francis Ford Coppola&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Francis Lawrence&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Frank Coraci&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Frank Oz&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Fred Wolf&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gabriele Muccino&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Garry Marshall&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gary Winick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gavin Hood&quot;' />
              <groupfilter from='&quot;George Lucas&quot;' function='range' level='[none:Director:nk]' to='&quot;George P. Cosmatos&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gore Verbinski&quot;' />
              <groupfilter from='&quot;Greg Mottola&quot;' function='range' level='[none:Director:nk]' to='&quot;Guillermo Del Toro&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Guy Hamilton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Hal Needham&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Harold Ramis&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Howard Deutch&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Hugh Wilson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ivan Reitman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;J.J. Abrams&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Cameron&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Foley&quot;' />
              <groupfilter from='&quot;James L. Brooks&quot;' function='range' level='[none:Director:nk]' to='&quot;James McTeigue&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Wong&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jan De Bont&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jared Hess&quot;' />
              <groupfilter from='&quot;Jason Friedberg&quot;' function='range' level='[none:Director:nk]' to='&quot;Jay Russell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jean-Pierre Jeunet&quot;' />
              <groupfilter from='&quot;Jeffrey W. Byrd&quot;' function='range' level='[none:Director:nk]' to='&quot;Jim Abrahams&quot;' />
              <groupfilter from='&quot;Joe Carnahan&quot;' function='range' level='[none:Director:nk]' to='&quot;Joe Pytka&quot;' />
              <groupfilter from='&quot;Joel Coen&quot;' function='range' level='[none:Director:nk]' to='&quot;Joel Zwick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Carpenter&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Dahl&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Frankenheimer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Glen&quot;' />
              <groupfilter from='&quot;John Huston&quot;' function='range' level='[none:Director:nk]' to='&quot;John Lasseter&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John McTiernan&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Milius&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Pasquin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Schultz&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Singleton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Turturro&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Waters&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Woo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Amiel&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Favreau&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Turteltaub&quot;' />
              <groupfilter from='&quot;Jonathan Mostow&quot;' function='range' level='[none:Director:nk]' to='&quot;Judd Apatow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Justin Lin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Karey Kirkpatrick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kathryn Bigelow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Keenen Ivory Wayans&quot;' />
              <groupfilter from='&quot;Kenneth Branagh&quot;' function='range' level='[none:Director:nk]' to='&quot;Kevin Costner&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Lima&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Reynolds&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Smith&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Larry Charles&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Lawrence Kasdan&quot;' />
              <groupfilter from='&quot;Lee Tamahori&quot;' function='range' level='[none:Director:nk]' to='&quot;Luke Wilson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Malcolm D. Lee&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Marc Forster&quot;' />
              <groupfilter from='&quot;Mark DiSalle&quot;' function='range' level='[none:Director:nk]' to='&quot;Mark Waters&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Martin Brest&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Martin Campbell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mathieu Kassovitz&quot;' />
              <groupfilter from='&quot;Matt Reeves&quot;' function='range' level='[none:Director:nk]' to='&quot;Mel Brooks&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Apted&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Bay&quot;' />
              <groupfilter from='&quot;Michael Crichton&quot;' function='range' level='[none:Director:nk]' to='&quot;Michael Mann&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Ritchie&quot;' />
              <groupfilter from='&quot;Michael Winterbottom&quot;' function='range' level='[none:Director:nk]' to='&quot;Mick Jackson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Judge&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Newell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Nichols&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mimi Leder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mira Nair&quot;' />
              <groupfilter from='&quot;Neal Brennan&quot;' function='range' level='[none:Director:nk]' to='&quot;Neil LaBute&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Nora Ephron&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Norman Jewison&quot;' />
              <groupfilter from='&quot;Oxide Pang Chun&quot;' function='range' level='[none:Director:nk]' to='&quot;Paul Greengrass&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Michael Glaser&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Thomas Anderson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Verhoeven&quot;' />
              <groupfilter from='&quot;Paul Weitz&quot;' function='range' level='[none:Director:nk]' to='&quot;Penny Marshall&quot;' />
              <groupfilter from='&quot;Peter Berg&quot;' function='range' level='[none:Director:nk]' to='&quot;Peter Cattaneo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Hewitt&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Hyams&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Segal&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peyton Reed&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Phil Alden Robinson&quot;' />
              <groupfilter from='&quot;Phil Lord&quot;' function='range' level='[none:Director:nk]' to='&quot;Raja Gosnell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Renny Harlin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Benjamin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Donner&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Fleischer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Linklater&quot;' />
              <groupfilter from='&quot;Ricky Gervais&quot;' function='range' level='[none:Director:nk]' to='&quot;Rob Cohen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Rob Minkoff&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Altman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Luketic&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Rodriguez&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Zemeckis&quot;' />
              <groupfilter from='&quot;Roger Donaldson&quot;' function='range' level='[none:Director:nk]' to='&quot;Roland Emmerich&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ron Howard&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ron Shelton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ronny Yu&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ruben Fleischer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Russell Mulcahy&quot;' />
              <groupfilter from='&quot;Sam Fell&quot;' function='range' level='[none:Director:nk]' to='&quot;Sam Mendes&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sammo Hung Kam-Bo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Seth Gordon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Shane Meadows&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Shawn Levy&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sheldon Lettich&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sidney J. Furie&quot;' />
              <groupfilter from='&quot;Simon West&quot;' function='range' level='[none:Director:nk]' to='&quot;Sir Richard Attenborough&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Spike Jonze&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Spike Lee&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stanley Kubrick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stephen Chow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stephen Frears&quot;' />
              <groupfilter from='&quot;Stephen Herek&quot;' function='range' level='[none:Director:nk]' to='&quot;Stephen Sommers&quot;' />
              <groupfilter from='&quot;Steve Buscemi&quot;' function='range' level='[none:Director:nk]' to='&quot;Steve Hickner&quot;' />
              <groupfilter from='&quot;Steve Oedekerk&quot;' function='range' level='[none:Director:nk]' to='&quot;Steven Spielberg&quot;' />
              <groupfilter from='&quot;Sydney Pollack&quot;' function='range' level='[none:Director:nk]' to='&quot;Ted Kotcheff&quot;' />
              <groupfilter from='&quot;Terry Gilliam&quot;' function='range' level='[none:Director:nk]' to='&quot;Thomas Vinterberg&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Burton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Hill&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Story&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Timur Bekmambetov&quot;' />
              <groupfilter from='&quot;Todd Phillips&quot;' function='range' level='[none:Director:nk]' to='&quot;Tom Dey&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tom Shadyac&quot;' />
              <groupfilter from='&quot;Tony Scott&quot;' function='range' level='[none:Director:nk]' to='&quot;Uwe Boll&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Vincent Gallo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Walter Hill&quot;' />
              <groupfilter from='&quot;Warren Beatty&quot;' function='range' level='[none:Director:nk]' to='&quot;Wes Anderson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;William Friedkin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Wolfgang Petersen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Woody Allen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Yimou Zhang&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Zack Snyder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Zak Penn&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Action&quot;' />
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</column>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]' field-type='quantitative' max='704440050.65375185' min='-38337083.278725512' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</cols>
      </table>
      <simple-id uuid='{6BEECDB6-578C-46B9-BE34-03FB2B39CC3D}' />
    </worksheet>
    <worksheet name='Q16'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='real' name='[IMDB Rating]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Avg' name='[avg:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Count' name='[cnt:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMDB Rating]' derivation='None' name='[none:IMDB Rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[cnt:Calculation_1287185081423011840:qk]' included-values='in-range'>
            <min>5</min>
            <max>211</max>
          </filter>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[cnt:Calculation_1287185081423011840:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:IMDB Rating:qk]' field-type='quantitative' max='14.205086797866073' min='0.26036336378579961' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]' field-type='quantitative' max='435312076.88888979' min='-364914718.89404583' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:IMDB Rating:qk]</cols>
      </table>
      <simple-id uuid='{673A8D31-1203-4DBF-98A8-DB1F225542CE}' />
    </worksheet>
    <worksheet name='Q18 My Director'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Avg' name='[avg:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='CountD' name='[ctd:Title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[ctd:Title:qk]' included-values='in-range'>
            <min>5</min>
            <max>1327</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[ctd:Title:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</cols>
      </table>
      <simple-id uuid='{3480234D-C6B6-4575-9A27-783C2BEC3A10}' />
    </worksheet>
    <worksheet name='Q9 Director without positive revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Max' name='[max:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]' included-values='in-range'>
            <min>-50000000</min>
            <max>0</max>
          </filter>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]' field-type='quantitative' max='20861674' min='-35575890' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[max:Calculation_1287185081423011840:qk]</cols>
      </table>
      <simple-id uuid='{ABD96685-5308-42CC-833F-A838D34E43F2}' />
    </worksheet>
    <worksheet name='Revenue as Dimension'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='None' name='[none:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]'>
            <groupfilter from='&quot;Abel Ferrara&quot;' function='range' level='[none:Director:nk]' to='&quot;Zak Penn&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</rows>
        <cols>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Calculation_1287185081423011840:qk]</cols>
      </table>
      <simple-id uuid='{AA841B64-65A6-4A4F-B53A-64F871A502E6}' />
    </worksheet>
    <worksheet name='Sum and Average of Revenue by Director'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_independent_part_1) (2)' name='federated.07dvuki0yk6y8b15dbscy0ejwgfq' />
          </datasources>
          <datasource-dependencies datasource='federated.07dvuki0yk6y8b15dbscy0ejwgfq'>
            <column caption='Revenue' datatype='integer' name='[Calculation_1287185081423011840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Avg' name='[avg:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1287185081423011840]' derivation='Sum' name='[sum:Calculation_1287185081423011840:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Director:nk]' />
              <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</rows>
        <cols>([federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk] + [federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Director: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Revenue: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Revenue: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</field>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>737984384.5</value>
                    <value>&quot;David Yates&quot;</value>
                    <value>1475968769</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Director: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Revenue: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Revenue: </run>
              <run bold='true'><![CDATA[<[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:qk]</field>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
                      <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>737984384.5</value>
                    <value>&quot;David Yates&quot;</value>
                    <value>1475968769</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{88FBCD91-B83F-49FA-9DFA-CF5E361F69D7}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Sum and Average of Revenue by Director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CA068FF-C895-462D-A2B3-0B7EE1D9805E}' />
    </window>
    <window class='worksheet' name='Revenue as Dimension'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D76BE855-575C-4882-9E44-DA750AF898C7}' />
    </window>
    <window class='worksheet' name='Q9 Director without positive revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48A1FD8F-70E0-4D9A-8C13-3D37C18F2DFD}' />
    </window>
    <window class='worksheet' name='Q11 Director with most profitable comedy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Revenue (bin):qk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5EBA9B3-DF5B-4E8C-8BA0-39B88FF1C5EC}' />
    </window>
    <window class='worksheet' maximized='true' name='Q12 Dragon vs Star'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[title keyword]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF68FDEA-E823-4F16-ADF8-050FB2E1FBB9}' />
    </window>
    <window class='worksheet' name='Q15 Comedy vs Movies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3225845E-61AA-4850-940F-7DF771147425}' />
    </window>
    <window class='worksheet' name='Q15-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Major Genre:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7028362-7DA8-4379-A30F-73FEA042B921}' />
    </window>
    <window class='worksheet' name='Q16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[avg:Calculation_1287185081423011840:ok]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:IMDB Rating:qk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[sum:Calculation_1287185081423011840:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA020592-C0E2-402C-87CF-E6B5E1D92471}' />
    </window>
    <window class='worksheet' name='Q18 My Director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Director:nk]</field>
            <field>[federated.07dvuki0yk6y8b15dbscy0ejwgfq].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC05A7DF-1D37-486C-B917-D225F139A815}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q11 Director with most profitable comedy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q12 Dragon vs Star' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q15 Comedy vs Movies' width='192'>
      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
      MDUJQJja/wCqpevXNwRDrQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q15-2' width='192'>
      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
      98IxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q16' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAahElEQVR4nO2de2xc133nP/cx7yGHb1Ik9RYp0ZJsSbZsK7Zhw05br72xnaxTb/NAWiza
      erdbNAiw2ADtbgzsdrtF0KJFg+4jKJIu4rpbO3FSO/HGj/gtx3Jkk+L7/X4Ph+TMcJ73sX+M
      SEueoURSMjXS/X0AAaM7X/7m3HvO954zZ87vXMW2bRtBcCjqtS6AIFxLrokBTNPc1PHNxrkW
      etu2RX8V9dtVt0XVA2x2NFZseuHqsV11W1QGEITtRgwgOBoxgOBoxACCo9Gv5I9nJwYZW8hy
      qCFE3/gsvmAZ9aU6Q9Nh/CUVuIxlLHcFTXt28PpPX+Lkww8RVJSrVXZBuGK2bADLSDG7lES3
      bAbHZzh+7Bhtra2MxOH4sWO0trZieTxYK4uk4h4ypoZpg2Vb2LaNZVl5Mdc7vh7FpF/VKhs0
      uOg3pt8oW9VveQjU+dGvyJomE5NTZM2Pp6AUReHCCamQz0Xf8DQNDbVb/ajrho1WbrHqnciW
      e4CjJ+8GDEp8JTRUBWhtbSNQWsmOkE5bWxvB8hpcZNlRW85U9zg7Q0E0BVRFxbZtVDXfe5Zl
      FTy+HsWkX7ujXMd6oGj021W3yrVYC2SaJpqm5R03DANd37gni0m/2uAKnZfoN6/frrqVWSDB
      0YgBBEcjBhAcjRhAcDRiAMHRiAEERyMGEByNGEBwNGIAwdGIAQRHIwYQHI0YQHA0YgDB0YgB
      BEcjBhAcjRhAcDRbNkAiukhXVxcjEzOY2SRdHe3MhJcx0it0dnQwF4kxPz3K3EIMsOltbyct
      O60JRcaWDeD2BTl4sJnZqXF6u3rY09zC5NggPd297D94iPGRAeYX48xNj2GmV+jvHiAl7V8o
      MracE6y7NHra27BVD2nbxOfSUBUFwwaPrqMqAAoeHSYnp6hpaABy6ZCWZRXcy7GYNrvdrN62
      7bV/or9y/XbV7ZYNsDA3iz9URXRqhsrKUnoGhjAVFzVBjb7BQWzVA0B9TTnvto+xP+QGWMsJ
      XS83dDN5ncWkL7ac2utdD9tTt1s2QHllNa6VBLV1O/C4NVbicTy+ALqqEI/H8foDYFtomsq9
      pyrRFOV8ryAIxcOWDaBqOqWlpWv/DwRL1l4HS1Zf575ieNzurX6MIHyqyDSo4GjEAIKjEQMI
      jkYMIDgaMYDgaMQAgqMRAwiORgwgOBoxgOBoxACCoxEDCI5GDCA4GjGA4GjEAIKjEQMIjmbr
      BrBtlhcjJFIZIPc6Y5hg2ywtRsiaFulUgnQ2l3oWj8WwJCleKDK2nBCzHJljOWky2TtAQ1UJ
      ac3P0vAE1QEV01PKwMgkPj2LqQY4emgvr/3zi9z3W/+akGSFCUXElg0QqqwlPTWCJ1BKJJbk
      lmOHaF1qZSlhckvzLloXP0LRvLhsg6XwDGXVkhQv+hsoKT4yNcxcQuf4kYP0drSxkjGwbPBq
      kMxmWT3P6jI/HcPz1Ffn0iQlKV70G6Wok+JNRUfJxOgbGOFASwsDfX3s2nuAioBOX38fu/c3
      o5hpykMBdlteQl4drwx/hCJDsTfaJ11FTNMseCfY6uPui0FfbHfQ612/XXUr06CCoxEDCI5G
      DCA4GjGA4GjEAIKjEQMIjkYMIDgaMYDgaMQAgqO5pAFefeuXLC5Ht6ssgrDtFDRAJpvl+Z++
      ys9eeYuf/+LdDa/gE4TrjYIG0DWNaHyFw4cO8MRjD6IosopNuDEpuHoolU7zxGMPks0a0viF
      G5qCBvD7fAB4PZ5tLYwgbDfrrh9dmurnf37/WfY01mBUHeErD925neUShG1h3Vmg9Moy7pJK
      wrPTuFxbzpsRhKJm3ZZds/84jz9cymLC4qaWprz3bcugq7Ob/QdvQrdTdPcMUF63k9pSne6+
      Yarqd6OmI9ieSnZUl9Jx9kMOnDiBV75TCEXEuj3A0uwob50+w+mXn+PZVz7Mez+dSuHx6KQN
      i57uXpqPHGVucoTungFajh5lZnyYSDTJwuw4RirO6NA4aZlNFYqMdXsA3e2lpqaGMleauVQy
      732vP4j3/NDIQMGtKiiKggXoikLuRq/gc6mMj09S2yC7Qoj+OtoVwuVyk0rEyboquO9kS977
      iegiYxMTBJIK1WUltHV0Yake6ko12ju7QPcBFjtqy3mnbYT9odyMkuwKIfqNck13hZgdbmci
      qnLvrU34Pa68973BUm674y5QFFy6Tq1hoJ5PMq4xDDRdB9tGURQeuLsGRQEZ/gvFxrrfAQKl
      FcwMd/H+++8zNh3O/0NVw+1243a5UBQF3eVCPd/KXedfq6qKoihomrr2WhCKiXV7gIrGg3zm
      WD8lVXWUlJRsZ5kEYdtYtwcY6zxN2CwluzjB6788t51lEoRtY10D1Dcdx1oc4mzfDA/ed3I7
      yyQI28a6BogthrFdQW47dTd15cHtLJMgfCqspDI8/Uo7M5H42rF1DVBWt5u7Th7lwzde4Gdv
      5f8QJgjFyLvtY/z3p99hYv7iRK6sYfI3PzxDOmvwl//0Hs+/3UMqY6y/N+jSzAhnOsc4fvxm
      KspK0dSrlz0pe4OK/nJs5Npbls17nePsrAlRW+7n9dZRftk5wYN3HODZ17t47O6D3H5TA7qm
      8syrHRimxdcevIVUxuBHb3XzQc/U+gaIjHfzv3/wE/Y1VpEoa+G3P3fXhgq+EcQAztGbloWm
      qpuOn0xn0FQNtyunX4wl+eGb3fzLU83UVeaG5L/smuBn7/UT8LmYicSpKQvy9S/egc/jIrqS
      5gevnGNgMoKmqNRWBPj6F+9E13I3csMwWEkb60+DmtkUujfI+Ng4extv21ChhRwT81HiyQxu
      XUPXVFy6hq4pqKqCS9Mo8buvdRG3hYxh8p//7nXKgl5+4/b9HN5TtSEDpLMG337mPaKJNHfe
      1Eh9VQnPvdHF7S0NfOf5M3zrt+/FMC1++GY3//FLd1FZ6iOeSOP3uddGKqUBD//usZOYlkXW
      sHDpat4oJhTwrt8DJGLLzC9EsFCw0Ni/Z+dVuCQ5buQeIJ21+Ob/epWDu6rIGiaGaZExTEzT
      xrItoisZHrrzAPef2FsUd+hPU98zGuaF07187q6DvHxmEMO0+IPPn8Tjzl3TdMbAtOy1xqmq
      CrZt8/2XWnHrKo/cfYjXzg4zGY7xxP2HqQr5eea1DmzbxuPSMEyLJ+4/Amy9bgv/RXqRP//2
      d/B7bDyBUh78wpc3HNjptA/NcdOeap58tHCvmUhl+ZO/+wUHGiporL6xf2A83TnOZ47s5NCu
      KpobK/nRm538xf99jycfu42320Z5o3UUj0sja1ioCtze0kDA52Y6EucbX7wDr8fNY/ccuijm
      4/e28NT33iCezPLnT372istY2ACJRaJZC9WIYnjLiceiQPUVf5gTeLN1JK/SLsTvdfGN3zzF
      d184y+8/civ1VaXbWLqNsxRP8cLpPm7ZX8vN+2svqzcti/BSgsqQH11TSWUM+sYX+NJnjwK5
      dWCP3XOID3pneObVDo7uq+G//e79+DwubNsmlsjQNTJPLJnhD79w+9pY/ZO4dI1v/OYpEmkD
      r/vKE7UKRyjby7f/yx+v/Ve9ijNANzKJdJaFaJJ99eWX1DVWl/L4fTfxP378K771O/etW9lb
      JZ0xePG9PnZUlvCZI5sbutq2zXudEzz3RhcP3LqXf3ytg3gyw6nDjWtruWzbZnwuSufwLJqm
      EUtkONM9gW3DsaY6vvTZowxMRthdG7qokSqKwqnDjZw63HjRZyqKQmnAw50XHDcMY90yVob8
      VG7qrNan8JVXFDRNy42RdJ1UKnWVPu7Gpm1glqP7ajbUoI/sraFld9XamPZq0TE8x1Pff5N4
      MsOzr3fmnt28CXrGwrz8wSD/6Wv38vCpZr755bt54XQfP367h5VUBsu2eaN1hL/50RkM0yaT
      NQn6XHzzy3fzp797Pz2jYbpHw5xuH9+0+a4FBXsAKx3mo84ZokvzaLrKYtzg0Yce2O6yFR3j
      c8v88M1umndWcnRfDTVlgbUvdLYNpzvGefy+wxuO9/h9N/FnT7/Lh33T3Hqw/qL3MoZJz2iY
      X/VOcUdLAy27qzZUvr9/qZU/+uKdNFSVYBgmpzvGue/YHgC6RuYZmVmixO9hV00pO2tDuRW8
      57Ftm2df7+K3HjhCeYkXyM2mfOtr9/KTd3t46ntv4vPolPo9/MlX7yHoc+V9Cf79R27lr557
      H9O0+Opv3Lzha3GtKGiA8fEJevtHOXGshWBAZ2Iitt3lKkp2VJbw4B0H6B9f4B9e7WA2Eqe8
      1MfhPdXsqy9nJrLCnrqyDcfTVIU/+PxJ/uwHb7OnrozKkB+Asdll/vbHH9BQVcrJlnp+9FYP
      5SVevvJrRwkFvSiKgmlZvPLBENVlAU4015E1LL774of8zkPHaawuxbZt/sWdTfz1c2e45+Zd
      jM9F+fv/18q9x/YwsxDjjdYRbMvm4VNNnGjeAcC5wVk8bp3mnRcPMLwenSfuP8Jjdx9iIhxj
      V00puqZiWVbeOTVUl/LAib0MTi3iK5BHUmwUnAZdWVlgcmyB+YU5FFUhlrT59QfuZiOr+Y30
      Cr39w1TX70ZJR7DdFdRUBult72DPkSN4FOWGmQa1bZvphTg9Y2E6h+c5uKuSXz+5f0OxL5xG
      /FXvFD99r58//uo9pDIG//X/vMW/efgETY0Va9rXPxrhJ+/0cKJ5B7cdrOcff9HJvh3lTIaj
      VJf50TWNoM/NE/cfvij+d57/gGMHdvDC6V7+/edvZ8+Ojw262qOtpDJ85ddu5rsvnOX3HrmN
      XbWhTZV/s+e7EbarbgsaYG5ymJ7+IeJphd0760gkUhw7fhyXdnkLdLR+yIHDN9PZ3o7P68ay
      oKVpNy/95BXuefwxQuqNY4ALuZIGYds2P3j5HJqmshhLsm9HOQ/eceCiBCLbtkmkMrx9bpyP
      +md49O6DtOyuwrRsfn5mkM6ROb7++J1rv5yuxh+aXuap773Bv330Nu46ujMvKcm2bVoHZnn6
      lXM0NVbwe5+7dUOJSze0AQDi8Ri2ZeELlqKrG8/kav3oI245dpzW1o/weDy4VPC4dWamlzh4
      6iRB2yKbzQIfXxTIzQR8siirjeNCjaqqawnNpmnidrsvqbkwjmEYa5lp62kuVZ7V2bBCn7Wa
      8L1aCZcqj3p+aYBpmmvlsWz406dPUxH08uQjx9DPN5RPDjMuLNd65VnddCDX4HSmFmLsqAgU
      1KzGyWRNLMvE7dLX1VyN8qx3fT75Wat1dSnNhXEsy8Llcl1Sc2GctWu/ngHef+cN0NxEVxIs
      RJb5/L/6Ap4N9ABjA90kcbOyksbrgt115bzbPsb+kJuqm49JD3AJfdYwUVWl4MLDYvhldzv1
      21W3Bf9iqLeDjOpBt6EiFOLwsVtxb6DxA+zaf4h4PI7XHwDbQtNU7j1ViaYobKIjcSQufeM7
      JghXh4IG2NN0E253P2qwDnN5HE33bugLMACKQnAthzh3J/O4nbH4S7j+KGiAmfEhuvqHcXvm
      WInMcesDzdtdLkHYFgoaoG7nPuoa97IUjVJWEuASq6YF4bqmYMseHR0lurSI2x+korwcGcAI
      NyoFDeAiQzweY3JwhKXIAqVVOzjctGebiyYInz6Fxza6l/ISP3hD3NS8F02XPkC4MVnnEUkB
      gnubCS4vEwpd/mdxQbheKWiAiqrcysOSoOwHJNzYXHLh+ma2shaE6xFJ9RIcjRhAcDRiAMHR
      iAEERyMGEByNGEBwNGIAwdFckQHSqSSWZQM2y4uR3B40ts3SYoSsaZFOJUhnc6mA8VgM6yru
      fyMIV4MtGyAVX+LMmTPEUgbjAz3MLcVoO9fJSF8nC8tx2s51MtDfQ2/fALaZ4bV/fpGYtH+h
      yNj0Qn8zm2Jiao76xl3s3ZnbzGkhluKWY4doXWplKWFyS/MuWhc/QtG8uGyDpfAMZdXypHjR
      X0dPil8PVXNRU1PNhbv/eXWFlYyBZYNXg2Q2y+p5Vpf56Riep/78TsjypHjRb5Rr+qT49VBU
      DZ/PR3xpgYXoCsupYZoOtjA00MeuvQeoCOj09fexe38zipmmPBRgt+Ul5NXxSlK8UGSsuy3K
      p4lsiyL6y7FddSvToIKjEQMIjkYMIDgaMYDgaMQAgqMRAwiORgwgOBoxgOBoxACCoxEDCI5G
      DCA4GjGA4GjEAIKjEQMIjkYMIDgaMYDgaK4oKb6zs5P+4TGM9ArtbW1MzEbIJqOca2tjan6J
      mYkhpueXAZuOs2dJya4QQpGx9R5A99LS0sLy/Cxd3b00HznK3OQI3T0DtBw9ysz4MJFokoXZ
      cYxUnNGhcdLS/oUiY9M5wUY6weDIOHv37aPt7Afs2N3E/PQoblVBURQsQFcUFAVAwedSGR+f
      pLZBdoUQffHtCrHlnOCBtveJKCVUlZbgV9LMRNOYlkJdqcbCioFpa3g0iz31FbzTNsL+kIeq
      m48RUhXJCRb9Zdmuut2yASzTxDBNFEVBd+mYWQP1fJJx1jDQdB1sO9crWDaKAoqS6yXEAKK/
      HNtVt1t+AraqabgvOBnd5Vp77Vp9nRsHoWmyH4pQnMg0qOBoxACCoxEDCI5GDCA4GjGA4GjE
      AIKjEQMIjkYMIDgaMYDgaMQAgqMRAwiORgwgOBoxgOBoxACCoxEDCI5mywawjCxTkxPEEinA
      Zm5milTGANtidnqKdNYkEV8mkc4CsLiwgClJ8UKRsWUDJFbieANBOs6dY7S3k5St0d7ewWB3
      B4aic669g5GRYQb7B7HNNG/9/FXi0v6FImPrSfEHmhjv+BBL87KYyHJLcw0LM1NE0yb7amuY
      m54E1YOOSWR+mvIaSYoXffElxW/aALrHz8GDB0msxGk+eoJzvzqL2+UmmkxjWeB3wUo6jWXn
      0iBrygK0D4VprAoArOWErpcbupXH3ReDvthyaq93PWxP3W45JxgrS19PL7V79lNXWcJg/wB7
      mw5S5tcZ6B9kf/NBMNKESgM0qwFK3BoeSQ0Wiowt7wpxJciuEKK/HNtVtzINKjgaMYDgaMQA
      gqMRAwiORgwgOBoxgOBoxACCoxEDCI5GDCA4GjGA4Gi2vhboCim0es+yrE2t6ism/WZWOor+
      8mxX3V4TA1xqPchmVgsWk77Y1tJc73rYnrotqiGQqm6uOKK/cfXbVZZrshpUEIoF7amnnnrq
      mn26bTE82MdcJE5leRmKAnOTowyPT4HuIeDzXCy3beamRoilVUoCXgCWF2bpHxzGV1qOx6UV
      1EdTH+s/ju8m4PNepLcsg6H+PqbnFiivqEBTFaILs/StEz+diNLfP8ByPE15eQgFGOzrYmY2
      jL+kDLd+sX4lukD/wAixZIbyslIUYHJ0iPHpeSqqKlE/kS+RiEboGxgmlkyv6Yf6upheJz5A
      MrrA8HSEyrJSAKbGhhibnKOiqiovfk4fYXhqgcrynP5S8Y1MjHPneoins1SUhdbij64Tf02f
      ylJRHjofv5vp2TC+AvEzyRg9fQPYmpug3wu2SV9PN0uJDBXnz+fS+iztre1EoitUVlXwydOd
      HB1kYmqGuUiUmqoKsM1rOwRKLs+SVIL4rRXC8VSukNOz1O3YQVV5SZ7etiw8AReR+ejascHR
      CVoOHWCwf2Bd/WL4Y/3UavwCFxTbon7nPkJalvlorjwDoxPcdKiJwb7+fLmi03SohVh4muz5
      fjS8sEhD4078Xlee3hco49ChZhZnp7AArCQzkRS7qr0Mjc3n6b2B0Hn9NKtf7+YvEd+2LQZG
      pohF5nIHrCTTCyl21/gKxs/pJ4ktzq0dm19YpH6d+LG5SZRgFY31Oy6Kv6fWz+Do3Pr6hrq8
      +IEC8Xt6+qiuraWsJAjAwvggrqpdGEtzxI08eZ7eiIeJ42PXrsaCDbth93721leAlruxRiYG
      r60BjFQKly+A3+cmmcqdYVNzM5nEMuc68xucqmmUnb8TrqIoKrruBjP/ChXSH1iN35UfX1Fd
      zE0OsGj5qCvzrcXXdBdY+TMMHrebrtazVDbuw33+Q5qamghPDzEyGcmPr8Bgbxem6gYbMJKo
      rgAef4BsMllQP9TbhaG6UeyL4w9PLuTpZ0b7CdU2Ypnnc67NJKrLjycQJJNIFNAPXKw/Hz8y
      M8zwRH78YPVu6ko1zn34Yc7wZmotfjaZH/9j/UdrN4impgNEZoYZmgjn6ePxGGY2Q1t7BwCJ
      lQzBEi8Br0IikycnHo9fpFd9VeyvL6On7SzxbL4e26Z/eIqmvQ1r8a+pAXzl1UTGBxiaXqTc
      DxNT8yyE50kkUwWzeywzw+jwGDMzk0Rjy0xMzeHVbHq6u/GXVW5IvxpfKxA/Ew/TMxIm6NFI
      JleYmJzDq3M+fkWefqy3laQWxDYyROamWIrFmJtfJJXOorvyhyeL4Tk0bxDFSuf02QBGfIqe
      7kGq62sK6lVvEHVVfz5+Om3gKlB+TyBEOhpmPhwmPDvJUiaAGZ+mu3uAmvraAvrSi/SLsRjz
      4dXy58ePR5eIxlawVY1YeIrFjB9zZZrurn6q6+sK6Jcv1kc/jl+o/LXVVURjcXSXm9HRUWoa
      axnq6GJi0aDSlyentroyp9dz+lQiylI0hmmraAVadiaxiO0tw60pjI6OUt1Qe+2/BBvZDBYq
      Ll3FNG1UxSadMfB6PSjKxaM427ZIJVPYgNvjARs0VSGdyeDxbEx/yfiWRSqVwkbB4/VgW/Yl
      45tGlnQmi6KquF06iqJhmlksC9wed94Y1LZMUukMusuNptigaNiWgWHZeNzuvGtTSG+aWUwL
      PAXir5XLNFG4fPxC+kvFt22bdCqF7vagYl2+/J/Q24qGbWYxLhPf5fFiWya6rpPNpEHVcRX4
      vpOn1zTS6TSqrhc0mG2ZWKhoqnLlT4oXhBuBovodQBC2GzGA4GjEAIKjuWaL4QThU8MyePGl
      Vzi2t5xn3hriPzz5JZ773l+z8/ZHOffqPxEzXdz12c/hWeqTHkC4EbGZnJomGY0Qnp4kHF1k
      dmGZ5eUElr+KP/rDJ3nvjZdZnJ8VAwg3NidPHOL5f3iO/TffunZM1V3oqgIoYgDhRkShqrIC
      j7+EXc3HSCRXuKWpkZKAh+zSJH/5F3/FzXfeRzAUkt8BBGcjPYDgaP4/HzdUWN4Pq/cAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q18 My Director' width='192'>
      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
      fgASwIQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q9 Director without positive revenue' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue as Dimension' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sum and Average of Revenue by Director' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
